"""
This type stub file was generated by pyright.
"""

import inspect
from typing import Any, Dict, List, Tuple

def get_class_str(d: Any) -> str | None:
    """
    Safely extract the 'class' key from a dict and cast to str, or return None.
    """
    ...

def split_params(params: List[Dict[str, Any]]) -> Tuple[List[Dict[str, Any]], List[Dict[str, Any]], List[Dict[str, Any]]]:
    """
    Splits a list of parameter dicts into positional-only, positional-or-keyword, and keyword-only lists.
    """
    ...

def is_supertype(sup: Any, sub: Any) -> bool:
    ...

def is_subtype(sub: Any, sup: Any) -> bool:
    ...

def is_any_or_missing(t: Any) -> bool:
    ...

def is_signature_compatible(a_sig: inspect.Signature, b_sig: inspect.Signature) -> bool:
    """
    Returns True if b_sig is compatible with a_sig (forwards compatible).
    Checks name, params (names, kinds, types, defaults), and return type.
    """
    ...

